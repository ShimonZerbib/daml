// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
// SPDX-License-Identifier: Apache-2.0

//
// Protocol buffer messages used by the participant state key-value utilities
// for implementing a Daml ledger backed by a key-value store.
//
// These messages should only be produced and consumed by the methods in
// `KeyValueCommitting`, `KeyValueConsumption` and `KeyValueSubmission` objects.
//

syntax = "proto3";

package com.daml.ledger.participant.state.kvutils;

option java_package = "com.daml.ledger.participant.state.kvutils";
option csharp_namespace = "Com.Daml.Ledger.Participant.State.KVUtils";

import "google/protobuf/timestamp.proto";
import "com/daml/ledger/configuration/ledger_configuration.proto";

// Configuration change request to change the ledger configuration.
message DamlConfigurationSubmission {
  // A unique string scoped to a particular participant for matching the
  // request with the result.
  // Implementers are free to select adequate mechanism e.g. UUID or similar.
  string submission_id = 1;

  // Submitting participant's id.
  string participant_id = 2;

  // The maximum record time after which the submission will be rejected.
  // Allows submitter to control when the request times out and to retry.
  google.protobuf.Timestamp maximum_record_time = 3;

  // The new configuration that replaces the current configuration.
  com.daml.ledger.configuration.LedgerConfiguration configuration = 4;
}

// Configuration entry that records a configuration change.
// Also used in state to look up latest configuration.
// When a configuration exists, only the participant that
// submitted previously can change it.
message DamlConfigurationEntry {
  // The submission from which this configuration originated.
  string submission_id = 1;

  // Submitting participant's id.
  string participant_id = 2;

  // The ledger configuration.
  com.daml.ledger.configuration.LedgerConfiguration configuration = 3;
}
